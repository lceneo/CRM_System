apiVersion: v1
kind: Service
metadata:
  name: backend
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
    service.beta.kubernetes.io/aws-load-balancer-internal: "true"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: tcp
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "https"
    service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout: "3600"
    service.beta.kubernetes.io/aws-load-balancer-extra-security-groups: sg-123456
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: arn:aws:acm:us-west-2:123456789012:certificate/abcd1234-abcd-1234-abcd-1234abcd1234
    service.beta.kubernetes.io/aws-load-balancer-proxy-protocol: "*"
  labels:
    app: backend
spec:
  type: LoadBalancer
  selector:
    app: backend
  ports:
  - name: http
    port: 8080
    targetPort: 8080
  sessionAffinity: ClientIP


---
apiVersion: v1
kind: Service
metadata:
  name: api-service
  namespace: application
  labels:
    env: Production
    owner: AntonYaskov
spec:
  selector:
    project: api
  ports:
    - name: api-listener
      protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: front-service
  namespace: application
  labels:
    env: Production
    owner: AntonYaskov
spec:
  selector:
    project: front
  ports:
    - name: front-listener
      protocol: TCP
      port: 3000
      targetPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-db-service
  namespace: application
  labels:
    app: postgres-db-service
spec:
  ports:
  - protocol: TCP
    port: 5432
    targetPort: 5432
  selector:
    app: postgres-db
